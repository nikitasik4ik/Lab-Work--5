name: CI/CD

on:
  push:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest
    environment: env
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12"]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.12'

    - name: Install requirements
      run: |
        pip install --upgrade pip
        pip install -r ./backend/requirements.txt

    - name: Run Unit&Integration tests
      run: |
        python -m pytest test

    - name: Docker Compose
      run: |
        docker compose -f docker-compose.yml up -d --build

    - name: Push Docker images
      run: |
        docker ps -a
        
        docker logout 
        
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        
        docker tag lab-work--5-backend ${{ secrets.DOCKER_USERNAME }}/lab-work-5-backend:latest
        docker tag lab-work--5-nginx ${{ secrets.DOCKER_USERNAME }}/lab-work-5-nginx:latest
        docker tag dpage/pgadmin4:7.2 ${{ secrets.DOCKER_USERNAME }}/lab-work-5-pgadmin:latest
        docker tag postgres:14.8-alpine3.18 ${{ secrets.DOCKER_USERNAME }}/lab-work-5-postgres:latest
        
        docker ps -a
        
        docker image push ${{ secrets.DOCKER_USERNAME }}/lab-work-5-backend:latest
        docker image push ${{ secrets.DOCKER_USERNAME }}/lab-work-5-nginx:latest
        docker image push ${{ secrets.DOCKER_USERNAME }}/lab-work-5-pgadmin:latest
        docker image push ${{ secrets.DOCKER_USERNAME }}/lab-work-5-postgres:latest